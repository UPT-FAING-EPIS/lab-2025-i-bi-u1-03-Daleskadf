name: Deploy Azure SQL and Execute Script

on:
  push:
    branches:
      - main

env:
  RESOURCE_GROUP: rg-powerbi-lab
  SQL_SERVER: sqlserverpowerbilab
  SQL_DATABASE: SalesBD
  SQL_USER: sqladmin
  SQL_PASSWORD: Fervillanueva_118  # Asegúrate de que este sea seguro (usa GitHub Secrets en producción)
  SQL_SCRIPT_PATH: ./BD.sql  # Ruta del archivo BD.sql

jobs:
  deploy:
    runs-on: windows-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init
      working-directory: infra

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: infra
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    - name: Azure Login (using Service Principal for SQL access)
      run: |
        az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}
      shell: pwsh

    - name: Configure SQL Firewall (using Azure CLI)
      run: |
        $IP = $(curl -s ifconfig.me)
        az sql server firewall-rule create `
          --resource-group ${{ env.RESOURCE_GROUP }} `
          --server ${{ env.SQL_SERVER }} `
          --name GitHubActionsIP `
          --start-ip-address $IP `
          --end-ip-address $IP
      shell: pwsh
      env:
        RESOURCE_GROUP: rg-powerbi-lab
        SQL_SERVER: sqlserverpowerbilab
        SQL_DATABASE: SalesBD
        SQL_USER: sqladmin
        SQL_PASSWORD: Fervillanueva_118

    - name: Execute SQL Script to Create Database and Populate Data
      run: |
        az sql db create `
          --resource-group ${{ env.RESOURCE_GROUP }} `
          --server ${{ env.SQL_SERVER }} `
          --name ${{ env.SQL_DATABASE }} `
          --edition GeneralPurpose `
          --compute-model Provisioned `
          --license-type LicenseIncluded `
          --max-size 5GB
        sqlcmd -S tcp:${{ env.SQL_SERVER }}.database.windows.net,1433 -d ${{ env.SQL_DATABASE }} -U ${{ env.SQL_USER }} -P ${{ env.SQL_PASSWORD }} -i ${{ env.SQL_SCRIPT_PATH }}
      shell: pwsh
      env:
        SQL_SCRIPT_PATH: ./BD.sql

